<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="17945741"><g><title>exit_fs (480,402 samples, 2.68%)</title><rect x="0.0000%" y="341" width="2.6770%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="480402"/><text x="0.2500%" y="351.50">ex..</text></g><g><title>path_put (480,402 samples, 2.68%)</title><rect x="0.0000%" y="325" width="2.6770%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="480402"/><text x="0.2500%" y="335.50">pa..</text></g><g><title>lockref_put_return (480,402 samples, 2.68%)</title><rect x="0.0000%" y="309" width="2.6770%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="480402"/><text x="0.2500%" y="319.50">lo..</text></g><g><title>ctrl-c (922,954 samples, 5.14%)</title><rect x="0.0000%" y="469" width="5.1430%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="479.50">ctrl-c</text></g><g><title>entry_SYSCALL_64_after_hwframe (922,954 samples, 5.14%)</title><rect x="0.0000%" y="453" width="5.1430%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="463.50">entry_..</text></g><g><title>do_syscall_64 (922,954 samples, 5.14%)</title><rect x="0.0000%" y="437" width="5.1430%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="447.50">do_sys..</text></g><g><title>syscall_exit_to_user_mode (922,954 samples, 5.14%)</title><rect x="0.0000%" y="421" width="5.1430%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="431.50">syscal..</text></g><g><title>arch_do_signal_or_restart (922,954 samples, 5.14%)</title><rect x="0.0000%" y="405" width="5.1430%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="415.50">arch_d..</text></g><g><title>get_signal (922,954 samples, 5.14%)</title><rect x="0.0000%" y="389" width="5.1430%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="399.50">get_si..</text></g><g><title>do_group_exit (922,954 samples, 5.14%)</title><rect x="0.0000%" y="373" width="5.1430%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="383.50">do_gro..</text></g><g><title>do_exit (922,954 samples, 5.14%)</title><rect x="0.0000%" y="357" width="5.1430%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="922954"/><text x="0.2500%" y="367.50">do_exit</text></g><g><title>exit_mm (442,552 samples, 2.47%)</title><rect x="2.6770%" y="341" width="2.4661%" height="15" fill="rgb(240,193,28)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="351.50">ex..</text></g><g><title>mmput (442,552 samples, 2.47%)</title><rect x="2.6770%" y="325" width="2.4661%" height="15" fill="rgb(216,20,37)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="335.50">mm..</text></g><g><title>__mmput (442,552 samples, 2.47%)</title><rect x="2.6770%" y="309" width="2.4661%" height="15" fill="rgb(206,188,39)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="319.50">__..</text></g><g><title>exit_mmap (442,552 samples, 2.47%)</title><rect x="2.6770%" y="293" width="2.4661%" height="15" fill="rgb(217,207,13)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="303.50">ex..</text></g><g><title>unmap_vmas (442,552 samples, 2.47%)</title><rect x="2.6770%" y="277" width="2.4661%" height="15" fill="rgb(231,73,38)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="287.50">un..</text></g><g><title>unmap_single_vma (442,552 samples, 2.47%)</title><rect x="2.6770%" y="261" width="2.4661%" height="15" fill="rgb(225,20,46)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="271.50">un..</text></g><g><title>unmap_page_range (442,552 samples, 2.47%)</title><rect x="2.6770%" y="245" width="2.4661%" height="15" fill="rgb(210,31,41)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="255.50">un..</text></g><g><title>zap_pmd_range.isra.0 (442,552 samples, 2.47%)</title><rect x="2.6770%" y="229" width="2.4661%" height="15" fill="rgb(221,200,47)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="239.50">za..</text></g><g><title>zap_pte_range (442,552 samples, 2.47%)</title><rect x="2.6770%" y="213" width="2.4661%" height="15" fill="rgb(226,26,5)" fg:x="480402" fg:w="442552"/><text x="2.9270%" y="223.50">za..</text></g><g><title>__libc_malloc_impl (1,260,442 samples, 7.02%)</title><rect x="5.1430%" y="453" width="7.0236%" height="15" fill="rgb(249,33,26)" fg:x="922956" fg:w="1260442"/><text x="5.3930%" y="463.50">__libc_ma..</text></g><g><title>do_mmap (1,177,597 samples, 6.56%)</title><rect x="12.1667%" y="341" width="6.5620%" height="15" fill="rgb(235,183,28)" fg:x="2183398" fg:w="1177597"/><text x="12.4167%" y="351.50">do_mmap</text></g><g><title>get_unmapped_area (54,324 samples, 0.30%)</title><rect x="18.4259%" y="325" width="0.3027%" height="15" fill="rgb(221,5,38)" fg:x="3306671" fg:w="54324"/><text x="18.6759%" y="335.50"></text></g><g><title>arch_get_unmapped_area_topdown (54,324 samples, 0.30%)</title><rect x="18.4259%" y="309" width="0.3027%" height="15" fill="rgb(247,18,42)" fg:x="3306671" fg:w="54324"/><text x="18.6759%" y="319.50"></text></g><g><title>vm_unmapped_area (54,313 samples, 0.30%)</title><rect x="18.4260%" y="293" width="0.3027%" height="15" fill="rgb(241,131,45)" fg:x="3306682" fg:w="54313"/><text x="18.6760%" y="303.50"></text></g><g><title>mas_empty_area_rev (54,313 samples, 0.30%)</title><rect x="18.4260%" y="277" width="0.3027%" height="15" fill="rgb(249,31,29)" fg:x="3306682" fg:w="54313"/><text x="18.6760%" y="287.50"></text></g><g><title>mas_rev_awalk (54,313 samples, 0.30%)</title><rect x="18.4260%" y="261" width="0.3027%" height="15" fill="rgb(225,111,53)" fg:x="3306682" fg:w="54313"/><text x="18.6760%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (54,219 samples, 0.30%)</title><rect x="18.4265%" y="245" width="0.3021%" height="15" fill="rgb(238,160,17)" fg:x="3306776" fg:w="54219"/><text x="18.6765%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (54,219 samples, 0.30%)</title><rect x="18.4265%" y="229" width="0.3021%" height="15" fill="rgb(214,148,48)" fg:x="3306776" fg:w="54219"/><text x="18.6765%" y="239.50"></text></g><g><title>__sysvec_apic_timer_interrupt (54,219 samples, 0.30%)</title><rect x="18.4265%" y="213" width="0.3021%" height="15" fill="rgb(232,36,49)" fg:x="3306776" fg:w="54219"/><text x="18.6765%" y="223.50"></text></g><g><title>hrtimer_interrupt (54,219 samples, 0.30%)</title><rect x="18.4265%" y="197" width="0.3021%" height="15" fill="rgb(209,103,24)" fg:x="3306776" fg:w="54219"/><text x="18.6765%" y="207.50"></text></g><g><title>__hrtimer_run_queues (54,219 samples, 0.30%)</title><rect x="18.4265%" y="181" width="0.3021%" height="15" fill="rgb(229,88,8)" fg:x="3306776" fg:w="54219"/><text x="18.6765%" y="191.50"></text></g><g><title>enqueue_hrtimer (54,219 samples, 0.30%)</title><rect x="18.4265%" y="165" width="0.3021%" height="15" fill="rgb(213,181,19)" fg:x="3306776" fg:w="54219"/><text x="18.6765%" y="175.50"></text></g><g><title>__mmap (3,260,298 samples, 18.17%)</title><rect x="12.1667%" y="453" width="18.1675%" height="15" fill="rgb(254,191,54)" fg:x="2183398" fg:w="3260298"/><text x="12.4167%" y="463.50">__mmap</text></g><g><title>entry_SYSCALL_64_after_hwframe (3,260,298 samples, 18.17%)</title><rect x="12.1667%" y="437" width="18.1675%" height="15" fill="rgb(241,83,37)" fg:x="2183398" fg:w="3260298"/><text x="12.4167%" y="447.50">entry_SYSCALL_64_after_hwfra..</text></g><g><title>do_syscall_64 (3,260,298 samples, 18.17%)</title><rect x="12.1667%" y="421" width="18.1675%" height="15" fill="rgb(233,36,39)" fg:x="2183398" fg:w="3260298"/><text x="12.4167%" y="431.50">do_syscall_64</text></g><g><title>x64_sys_call (3,260,298 samples, 18.17%)</title><rect x="12.1667%" y="405" width="18.1675%" height="15" fill="rgb(226,3,54)" fg:x="2183398" fg:w="3260298"/><text x="12.4167%" y="415.50">x64_sys_call</text></g><g><title>__x64_sys_mmap (3,260,298 samples, 18.17%)</title><rect x="12.1667%" y="389" width="18.1675%" height="15" fill="rgb(245,192,40)" fg:x="2183398" fg:w="3260298"/><text x="12.4167%" y="399.50">__x64_sys_mmap</text></g><g><title>ksys_mmap_pgoff (3,260,298 samples, 18.17%)</title><rect x="12.1667%" y="373" width="18.1675%" height="15" fill="rgb(238,167,29)" fg:x="2183398" fg:w="3260298"/><text x="12.4167%" y="383.50">ksys_mmap_pgoff</text></g><g><title>vm_mmap_pgoff (3,260,298 samples, 18.17%)</title><rect x="12.1667%" y="357" width="18.1675%" height="15" fill="rgb(232,182,51)" fg:x="2183398" fg:w="3260298"/><text x="12.4167%" y="367.50">vm_mmap_pgoff</text></g><g><title>down_write_killable (2,082,701 samples, 11.61%)</title><rect x="18.7286%" y="341" width="11.6055%" height="15" fill="rgb(231,60,39)" fg:x="3360995" fg:w="2082701"/><text x="18.9786%" y="351.50">down_write_killab..</text></g><g><title>rwsem_down_write_slowpath (910,764 samples, 5.08%)</title><rect x="25.2591%" y="325" width="5.0751%" height="15" fill="rgb(208,69,12)" fg:x="4532932" fg:w="910764"/><text x="25.5091%" y="335.50">rwsem_..</text></g><g><title>rwsem_optimistic_spin (910,764 samples, 5.08%)</title><rect x="25.2591%" y="309" width="5.0751%" height="15" fill="rgb(235,93,37)" fg:x="4532932" fg:w="910764"/><text x="25.5091%" y="319.50">rwsem_..</text></g><g><title>rwsem_spin_on_owner (910,764 samples, 5.08%)</title><rect x="25.2591%" y="293" width="5.0751%" height="15" fill="rgb(213,116,39)" fg:x="4532932" fg:w="910764"/><text x="25.5091%" y="303.50">rwsem_..</text></g><g><title>__munmap (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="453" width="6.6489%" height="15" fill="rgb(222,207,29)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="463.50">__munmap</text></g><g><title>entry_SYSCALL_64_after_hwframe (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="437" width="6.6489%" height="15" fill="rgb(206,96,30)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="447.50">entry_SYS..</text></g><g><title>do_syscall_64 (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="421" width="6.6489%" height="15" fill="rgb(218,138,4)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="431.50">do_syscal..</text></g><g><title>x64_sys_call (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="405" width="6.6489%" height="15" fill="rgb(250,191,14)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="415.50">x64_sys_c..</text></g><g><title>__x64_sys_munmap (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="389" width="6.6489%" height="15" fill="rgb(239,60,40)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="399.50">__x64_sys..</text></g><g><title>__vm_munmap (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="373" width="6.6489%" height="15" fill="rgb(206,27,48)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="383.50">__vm_munm..</text></g><g><title>do_vmi_munmap (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="357" width="6.6489%" height="15" fill="rgb(225,35,8)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="367.50">do_vmi_mu..</text></g><g><title>do_vmi_align_munmap (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="341" width="6.6489%" height="15" fill="rgb(250,213,24)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="351.50">do_vmi_al..</text></g><g><title>__split_vma (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="325" width="6.6489%" height="15" fill="rgb(247,123,22)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="335.50">__split_v..</text></g><g><title>vma_prepare (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="309" width="6.6489%" height="15" fill="rgb(231,138,38)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="319.50">vma_prepa..</text></g><g><title>down_write (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="293" width="6.6489%" height="15" fill="rgb(231,145,46)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="303.50">down_write</text></g><g><title>asm_sysvec_apic_timer_interrupt (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="277" width="6.6489%" height="15" fill="rgb(251,118,11)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="287.50">asm_sysve..</text></g><g><title>sysvec_apic_timer_interrupt (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="261" width="6.6489%" height="15" fill="rgb(217,147,25)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="271.50">sysvec_ap..</text></g><g><title>__sysvec_apic_timer_interrupt (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="245" width="6.6489%" height="15" fill="rgb(247,81,37)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="255.50">__sysvec_..</text></g><g><title>hrtimer_interrupt (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="229" width="6.6489%" height="15" fill="rgb(209,12,38)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="239.50">hrtimer_i..</text></g><g><title>__hrtimer_run_queues (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="213" width="6.6489%" height="15" fill="rgb(227,1,9)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="223.50">__hrtimer..</text></g><g><title>tick_nohz_highres_handler (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="197" width="6.6489%" height="15" fill="rgb(248,47,43)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="207.50">tick_nohz..</text></g><g><title>tick_sched_handle (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="181" width="6.6489%" height="15" fill="rgb(221,10,30)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="191.50">tick_sche..</text></g><g><title>update_process_times (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="165" width="6.6489%" height="15" fill="rgb(210,229,1)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="175.50">update_pr..</text></g><g><title>scheduler_tick (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="149" width="6.6489%" height="15" fill="rgb(222,148,37)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="159.50">scheduler..</text></g><g><title>task_tick_fair (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="133" width="6.6489%" height="15" fill="rgb(234,67,33)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="143.50">task_tick..</text></g><g><title>update_load_avg (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="117" width="6.6489%" height="15" fill="rgb(247,98,35)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="127.50">update_lo..</text></g><g><title>__update_load_avg_cfs_rq (1,193,186 samples, 6.65%)</title><rect x="30.3342%" y="101" width="6.6489%" height="15" fill="rgb(247,138,52)" fg:x="5443696" fg:w="1193186"/><text x="30.5842%" y="111.50">__update_..</text></g><g><title>_start (447,548 samples, 2.49%)</title><rect x="36.9830%" y="453" width="2.4939%" height="15" fill="rgb(213,79,30)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="463.50">_s..</text></g><g><title>asm_exc_page_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="437" width="2.4939%" height="15" fill="rgb(246,177,23)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="447.50">as..</text></g><g><title>exc_page_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="421" width="2.4939%" height="15" fill="rgb(230,62,27)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="431.50">ex..</text></g><g><title>do_user_addr_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="405" width="2.4939%" height="15" fill="rgb(216,154,8)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="415.50">do..</text></g><g><title>handle_mm_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="389" width="2.4939%" height="15" fill="rgb(244,35,45)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="399.50">ha..</text></g><g><title>__handle_mm_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="373" width="2.4939%" height="15" fill="rgb(251,115,12)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="383.50">__..</text></g><g><title>handle_pte_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="357" width="2.4939%" height="15" fill="rgb(240,54,50)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="367.50">ha..</text></g><g><title>do_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="341" width="2.4939%" height="15" fill="rgb(233,84,52)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="351.50">do..</text></g><g><title>do_read_fault (447,548 samples, 2.49%)</title><rect x="36.9830%" y="325" width="2.4939%" height="15" fill="rgb(207,117,47)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="335.50">do..</text></g><g><title>filemap_map_pages (447,548 samples, 2.49%)</title><rect x="36.9830%" y="309" width="2.4939%" height="15" fill="rgb(249,43,39)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="319.50">fi..</text></g><g><title>set_pte_range (447,548 samples, 2.49%)</title><rect x="36.9830%" y="293" width="2.4939%" height="15" fill="rgb(209,38,44)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="303.50">se..</text></g><g><title>percpu_counter_add_batch (447,548 samples, 2.49%)</title><rect x="36.9830%" y="277" width="2.4939%" height="15" fill="rgb(236,212,23)" fg:x="6636882" fg:w="447548"/><text x="37.2330%" y="287.50">pe..</text></g><g><title>do_wp_page (787,297 samples, 4.39%)</title><rect x="39.4769%" y="341" width="4.3871%" height="15" fill="rgb(242,79,21)" fg:x="7084430" fg:w="787297"/><text x="39.7269%" y="351.50">do_wp..</text></g><g><title>wp_page_copy (787,297 samples, 4.39%)</title><rect x="39.4769%" y="325" width="4.3871%" height="15" fill="rgb(211,96,35)" fg:x="7084430" fg:w="787297"/><text x="39.7269%" y="335.50">wp_pa..</text></g><g><title>ptep_clear_flush (787,297 samples, 4.39%)</title><rect x="39.4769%" y="309" width="4.3871%" height="15" fill="rgb(253,215,40)" fg:x="7084430" fg:w="787297"/><text x="39.7269%" y="319.50">ptep_..</text></g><g><title>flush_tlb_mm_range (787,297 samples, 4.39%)</title><rect x="39.4769%" y="293" width="4.3871%" height="15" fill="rgb(211,81,21)" fg:x="7084430" fg:w="787297"/><text x="39.7269%" y="303.50">flush..</text></g><g><title>native_flush_tlb_multi (787,297 samples, 4.39%)</title><rect x="39.4769%" y="277" width="4.3871%" height="15" fill="rgb(208,190,38)" fg:x="7084430" fg:w="787297"/><text x="39.7269%" y="287.50">nativ..</text></g><g><title>on_each_cpu_cond_mask (787,297 samples, 4.39%)</title><rect x="39.4769%" y="261" width="4.3871%" height="15" fill="rgb(235,213,38)" fg:x="7084430" fg:w="787297"/><text x="39.7269%" y="271.50">on_ea..</text></g><g><title>smp_call_function_many_cond (787,297 samples, 4.39%)</title><rect x="39.4769%" y="245" width="4.3871%" height="15" fill="rgb(237,122,38)" fg:x="7084430" fg:w="787297"/><text x="39.7269%" y="255.50">smp_c..</text></g><g><title>alloc_slot (1,456,667 samples, 8.12%)</title><rect x="39.4769%" y="453" width="8.1171%" height="15" fill="rgb(244,218,35)" fg:x="7084430" fg:w="1456667"/><text x="39.7269%" y="463.50">alloc_slot</text></g><g><title>asm_exc_page_fault (1,456,667 samples, 8.12%)</title><rect x="39.4769%" y="437" width="8.1171%" height="15" fill="rgb(240,68,47)" fg:x="7084430" fg:w="1456667"/><text x="39.7269%" y="447.50">asm_exc_pag..</text></g><g><title>exc_page_fault (1,456,667 samples, 8.12%)</title><rect x="39.4769%" y="421" width="8.1171%" height="15" fill="rgb(210,16,53)" fg:x="7084430" fg:w="1456667"/><text x="39.7269%" y="431.50">exc_page_fa..</text></g><g><title>do_user_addr_fault (1,456,667 samples, 8.12%)</title><rect x="39.4769%" y="405" width="8.1171%" height="15" fill="rgb(235,124,12)" fg:x="7084430" fg:w="1456667"/><text x="39.7269%" y="415.50">do_user_add..</text></g><g><title>handle_mm_fault (1,456,667 samples, 8.12%)</title><rect x="39.4769%" y="389" width="8.1171%" height="15" fill="rgb(224,169,11)" fg:x="7084430" fg:w="1456667"/><text x="39.7269%" y="399.50">handle_mm_f..</text></g><g><title>__handle_mm_fault (1,456,667 samples, 8.12%)</title><rect x="39.4769%" y="373" width="8.1171%" height="15" fill="rgb(250,166,2)" fg:x="7084430" fg:w="1456667"/><text x="39.7269%" y="383.50">__handle_mm..</text></g><g><title>handle_pte_fault (1,456,667 samples, 8.12%)</title><rect x="39.4769%" y="357" width="8.1171%" height="15" fill="rgb(242,216,29)" fg:x="7084430" fg:w="1456667"/><text x="39.7269%" y="367.50">handle_pte_..</text></g><g><title>pte_offset_map_nolock (669,370 samples, 3.73%)</title><rect x="43.8640%" y="341" width="3.7300%" height="15" fill="rgb(230,116,27)" fg:x="7871727" fg:w="669370"/><text x="44.1140%" y="351.50">pte_..</text></g><g><title>__rcu_read_lock (669,370 samples, 3.73%)</title><rect x="43.8640%" y="325" width="3.7300%" height="15" fill="rgb(228,99,48)" fg:x="7871727" fg:w="669370"/><text x="44.1140%" y="335.50">__rc..</text></g><g><title>asm_sysvec_apic_timer_interrupt (22,351 samples, 0.12%)</title><rect x="47.5947%" y="213" width="0.1245%" height="15" fill="rgb(253,11,6)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (22,351 samples, 0.12%)</title><rect x="47.5947%" y="197" width="0.1245%" height="15" fill="rgb(247,143,39)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (22,351 samples, 0.12%)</title><rect x="47.5947%" y="181" width="0.1245%" height="15" fill="rgb(236,97,10)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="191.50"></text></g><g><title>hrtimer_interrupt (22,351 samples, 0.12%)</title><rect x="47.5947%" y="165" width="0.1245%" height="15" fill="rgb(233,208,19)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="175.50"></text></g><g><title>tick_program_event (22,351 samples, 0.12%)</title><rect x="47.5947%" y="149" width="0.1245%" height="15" fill="rgb(216,164,2)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="159.50"></text></g><g><title>clockevents_program_event (22,351 samples, 0.12%)</title><rect x="47.5947%" y="133" width="0.1245%" height="15" fill="rgb(220,129,5)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="143.50"></text></g><g><title>lapic_next_event (22,351 samples, 0.12%)</title><rect x="47.5947%" y="117" width="0.1245%" height="15" fill="rgb(242,17,10)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="127.50"></text></g><g><title>native_write_msr (22,351 samples, 0.12%)</title><rect x="47.5947%" y="101" width="0.1245%" height="15" fill="rgb(242,107,0)" fg:x="8541216" fg:w="22351"/><text x="47.8447%" y="111.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (50,876 samples, 0.28%)</title><rect x="47.5940%" y="453" width="0.2835%" height="15" fill="rgb(251,28,31)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="463.50"></text></g><g><title>do_syscall_64 (50,876 samples, 0.28%)</title><rect x="47.5940%" y="437" width="0.2835%" height="15" fill="rgb(233,223,10)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="447.50"></text></g><g><title>x64_sys_call (50,876 samples, 0.28%)</title><rect x="47.5940%" y="421" width="0.2835%" height="15" fill="rgb(215,21,27)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="431.50"></text></g><g><title>__x64_sys_execve (50,876 samples, 0.28%)</title><rect x="47.5940%" y="405" width="0.2835%" height="15" fill="rgb(232,23,21)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="415.50"></text></g><g><title>do_execveat_common.isra.0 (50,876 samples, 0.28%)</title><rect x="47.5940%" y="389" width="0.2835%" height="15" fill="rgb(244,5,23)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="399.50"></text></g><g><title>bprm_execve (50,876 samples, 0.28%)</title><rect x="47.5940%" y="373" width="0.2835%" height="15" fill="rgb(226,81,46)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="383.50"></text></g><g><title>bprm_execve.part.0 (50,876 samples, 0.28%)</title><rect x="47.5940%" y="357" width="0.2835%" height="15" fill="rgb(247,70,30)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="367.50"></text></g><g><title>exec_binprm (50,876 samples, 0.28%)</title><rect x="47.5940%" y="341" width="0.2835%" height="15" fill="rgb(212,68,19)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="351.50"></text></g><g><title>search_binary_handler (50,876 samples, 0.28%)</title><rect x="47.5940%" y="325" width="0.2835%" height="15" fill="rgb(240,187,13)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="335.50"></text></g><g><title>load_elf_binary (50,876 samples, 0.28%)</title><rect x="47.5940%" y="309" width="0.2835%" height="15" fill="rgb(223,113,26)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="319.50"></text></g><g><title>setup_arg_pages (50,876 samples, 0.28%)</title><rect x="47.5940%" y="293" width="0.2835%" height="15" fill="rgb(206,192,2)" fg:x="8541097" fg:w="50876"/><text x="47.8440%" y="303.50"></text></g><g><title>mprotect_fixup (50,864 samples, 0.28%)</title><rect x="47.5941%" y="277" width="0.2834%" height="15" fill="rgb(241,108,4)" fg:x="8541109" fg:w="50864"/><text x="47.8441%" y="287.50"></text></g><g><title>change_protection (50,864 samples, 0.28%)</title><rect x="47.5941%" y="261" width="0.2834%" height="15" fill="rgb(247,173,49)" fg:x="8541109" fg:w="50864"/><text x="47.8441%" y="271.50"></text></g><g><title>change_protection_range (50,864 samples, 0.28%)</title><rect x="47.5941%" y="245" width="0.2834%" height="15" fill="rgb(224,114,35)" fg:x="8541109" fg:w="50864"/><text x="47.8441%" y="255.50"></text></g><g><title>change_p4d_range (50,864 samples, 0.28%)</title><rect x="47.5941%" y="229" width="0.2834%" height="15" fill="rgb(245,159,27)" fg:x="8541109" fg:w="50864"/><text x="47.8441%" y="239.50"></text></g><g><title>change_pmd_range.isra.0 (28,406 samples, 0.16%)</title><rect x="47.7192%" y="213" width="0.1583%" height="15" fill="rgb(245,172,44)" fg:x="8563567" fg:w="28406"/><text x="47.9692%" y="223.50"></text></g><g><title>gossh::list::Server::hash_list (1,097,251 samples, 6.11%)</title><rect x="47.8775%" y="357" width="6.1143%" height="15" fill="rgb(236,23,11)" fg:x="8591973" fg:w="1097251"/><text x="48.1275%" y="367.50">gossh::l..</text></g><g><title>core::str::pattern::StrSearcher::new (1,097,251 samples, 6.11%)</title><rect x="47.8775%" y="341" width="6.1143%" height="15" fill="rgb(205,117,38)" fg:x="8591973" fg:w="1097251"/><text x="48.1275%" y="351.50">core::st..</text></g><g><title>&lt;ratatui::backend::crossterm::CrosstermBackend&lt;W&gt; as ratatui::backend::Backend&gt;::draw (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="341" width="7.0280%" height="15" fill="rgb(237,72,25)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="351.50">&lt;ratatui:..</text></g><g><title>crossterm::command::write_command_ansi (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="325" width="7.0280%" height="15" fill="rgb(244,70,9)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="335.50">crossterm..</text></g><g><title>core::fmt::write (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="309" width="7.0280%" height="15" fill="rgb(217,125,39)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="319.50">core::fmt..</text></g><g><title>&lt;crossterm::command::write_command_ansi::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="293" width="7.0280%" height="15" fill="rgb(235,36,10)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="303.50">&lt;crosster..</text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="277" width="7.0280%" height="15" fill="rgb(251,123,47)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="287.50">&lt;std::io:..</text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="261" width="7.0280%" height="15" fill="rgb(221,13,13)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="271.50">&lt;&amp;std::io..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="245" width="7.0280%" height="15" fill="rgb(238,131,9)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="255.50">&lt;std::io:..</text></g><g><title>core::slice::memchr::memrchr (1,261,222 samples, 7.03%)</title><rect x="53.9918%" y="229" width="7.0280%" height="15" fill="rgb(211,50,8)" fg:x="9689224" fg:w="1261222"/><text x="54.2418%" y="239.50">core::sli..</text></g><g><title>asm_exc_page_fault (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="325" width="6.9788%" height="15" fill="rgb(245,182,24)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="335.50">asm_exc_p..</text></g><g><title>exc_page_fault (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="309" width="6.9788%" height="15" fill="rgb(242,14,37)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="319.50">exc_page_..</text></g><g><title>do_user_addr_fault (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="293" width="6.9788%" height="15" fill="rgb(246,228,12)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="303.50">do_user_a..</text></g><g><title>handle_mm_fault (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="277" width="6.9788%" height="15" fill="rgb(213,55,15)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="287.50">handle_mm..</text></g><g><title>__handle_mm_fault (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="261" width="6.9788%" height="15" fill="rgb(209,9,3)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="271.50">__handle_..</text></g><g><title>handle_pte_fault (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="245" width="6.9788%" height="15" fill="rgb(230,59,30)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="255.50">handle_pt..</text></g><g><title>do_anonymous_page (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="229" width="6.9788%" height="15" fill="rgb(209,121,21)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="239.50">do_anonym..</text></g><g><title>alloc_anon_folio (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="213" width="6.9788%" height="15" fill="rgb(220,109,13)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="223.50">alloc_ano..</text></g><g><title>vma_alloc_folio (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="197" width="6.9788%" height="15" fill="rgb(232,18,1)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="207.50">vma_alloc..</text></g><g><title>alloc_pages_mpol (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="181" width="6.9788%" height="15" fill="rgb(215,41,42)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="191.50">alloc_pag..</text></g><g><title>__next_zones_zonelist (1,252,399 samples, 6.98%)</title><rect x="61.0197%" y="165" width="6.9788%" height="15" fill="rgb(224,123,36)" fg:x="10950446" fg:w="1252399"/><text x="61.2697%" y="175.50">__next_zo..</text></g><g><title>ratatui::buffer::buffer::Buffer::diff (2,499,140 samples, 13.93%)</title><rect x="61.0197%" y="341" width="13.9261%" height="15" fill="rgb(240,125,3)" fg:x="10950446" fg:w="2499140"/><text x="61.2697%" y="351.50">ratatui::buffer::buff..</text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (1,246,741 samples, 6.95%)</title><rect x="67.9986%" y="325" width="6.9473%" height="15" fill="rgb(205,98,50)" fg:x="12202845" fg:w="1246741"/><text x="68.2486%" y="335.50">core::ite..</text></g><g><title>ratatui::layout::layout::Layout::split (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="341" width="6.8276%" height="15" fill="rgb(205,185,37)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="351.50">ratatui::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="325" width="6.8276%" height="15" fill="rgb(238,207,15)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="335.50">std::thre..</text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get_or_insert (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="309" width="6.8276%" height="15" fill="rgb(213,199,42)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="319.50">lru::LruC..</text></g><g><title>ratatui::layout::layout::Layout::try_split (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="293" width="6.8276%" height="15" fill="rgb(235,201,11)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="303.50">ratatui::..</text></g><g><title>cassowary::solver_impl::Solver::add_constraint (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="277" width="6.8276%" height="15" fill="rgb(207,46,11)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="287.50">cassowary..</text></g><g><title>cassowary::solver_impl::Solver::optimise (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="261" width="6.8276%" height="15" fill="rgb(241,35,35)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="271.50">cassowary..</text></g><g><title>cassowary::solver_impl::Solver::substitute (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="245" width="6.8276%" height="15" fill="rgb(243,32,47)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="255.50">cassowary..</text></g><g><title>core::hash::BuildHasher::hash_one (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="229" width="6.8276%" height="15" fill="rgb(247,202,23)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="239.50">core::has..</text></g><g><title>core::hash::Hasher::write_usize (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="213" width="6.8276%" height="15" fill="rgb(219,102,11)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="223.50">core::has..</text></g><g><title>asm_common_interrupt (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="197" width="6.8276%" height="15" fill="rgb(243,110,44)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="207.50">asm_commo..</text></g><g><title>common_interrupt (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="181" width="6.8276%" height="15" fill="rgb(222,74,54)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="191.50">common_in..</text></g><g><title>irq_exit_rcu (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="165" width="6.8276%" height="15" fill="rgb(216,99,12)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="175.50">irq_exit_..</text></g><g><title>__irq_exit_rcu (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="149" width="6.8276%" height="15" fill="rgb(226,22,26)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="159.50">__irq_exi..</text></g><g><title>handle_softirqs (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="133" width="6.8276%" height="15" fill="rgb(217,163,10)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="143.50">handle_so..</text></g><g><title>net_rx_action (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="117" width="6.8276%" height="15" fill="rgb(213,25,53)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="127.50">net_rx_ac..</text></g><g><title>__napi_poll (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="101" width="6.8276%" height="15" fill="rgb(252,105,26)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="111.50">__napi_po..</text></g><g><title>virtnet_poll (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="85" width="6.8276%" height="15" fill="rgb(220,39,43)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="95.50">virtnet_p..</text></g><g><title>napi_complete_done (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="69" width="6.8276%" height="15" fill="rgb(229,68,48)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="79.50">napi_comp..</text></g><g><title>netif_receive_skb_list_internal (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="53" width="6.8276%" height="15" fill="rgb(252,8,32)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="63.50">netif_rec..</text></g><g><title>__netif_receive_skb_list_core (1,225,272 samples, 6.83%)</title><rect x="74.9458%" y="37" width="6.8276%" height="15" fill="rgb(223,20,43)" fg:x="13449586" fg:w="1225272"/><text x="75.1958%" y="47.50">__netif_r..</text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw (6,220,954 samples, 34.67%)</title><rect x="53.9918%" y="357" width="34.6654%" height="15" fill="rgb(229,81,49)" fg:x="9689224" fg:w="6220954"/><text x="54.2418%" y="367.50">ratatui::terminal::terminal::Terminal&lt;B&gt;::try_draw</text></g><g><title>ratatui::widgets::list::rendering::&lt;impl ratatui::widgets::StatefulWidget for ratatui::widgets::list::list::List&gt;::render (1,235,320 samples, 6.88%)</title><rect x="81.7735%" y="341" width="6.8836%" height="15" fill="rgb(236,28,36)" fg:x="14674858" fg:w="1235320"/><text x="82.0235%" y="351.50">ratatui::..</text></g><g><title>ratatui::widgets::list::rendering::&lt;impl ratatui::widgets::StatefulWidgetRef for ratatui::widgets::list::list::List&gt;::render_ref (1,235,320 samples, 6.88%)</title><rect x="81.7735%" y="325" width="6.8836%" height="15" fill="rgb(249,185,26)" fg:x="14674858" fg:w="1235320"/><text x="82.0235%" y="335.50">ratatui::..</text></g><g><title>&lt;ratatui::text::text::Text as ratatui::widgets::WidgetRef&gt;::render_ref (1,235,320 samples, 6.88%)</title><rect x="81.7735%" y="309" width="6.8836%" height="15" fill="rgb(249,174,33)" fg:x="14674858" fg:w="1235320"/><text x="82.0235%" y="319.50">&lt;ratatui:..</text></g><g><title>ratatui::buffer::buffer::Buffer::set_style (1,235,320 samples, 6.88%)</title><rect x="81.7735%" y="293" width="6.8836%" height="15" fill="rgb(233,201,37)" fg:x="14674858" fg:w="1235320"/><text x="82.0235%" y="303.50">ratatui::..</text></g><g><title>gossh (17,022,785 samples, 94.86%)</title><rect x="5.1430%" y="469" width="94.8570%" height="15" fill="rgb(221,78,26)" fg:x="922954" fg:w="17022785"/><text x="5.3930%" y="479.50">gossh</text></g><g><title>libc_start_main_stage2 (9,353,766 samples, 52.12%)</title><rect x="47.8775%" y="453" width="52.1225%" height="15" fill="rgb(250,127,30)" fg:x="8591973" fg:w="9353766"/><text x="48.1275%" y="463.50">libc_start_main_stage2</text></g><g><title>main (9,353,766 samples, 52.12%)</title><rect x="47.8775%" y="437" width="52.1225%" height="15" fill="rgb(230,49,44)" fg:x="8591973" fg:w="9353766"/><text x="48.1275%" y="447.50">main</text></g><g><title>std::rt::lang_start_internal (9,353,766 samples, 52.12%)</title><rect x="47.8775%" y="421" width="52.1225%" height="15" fill="rgb(229,67,23)" fg:x="8591973" fg:w="9353766"/><text x="48.1275%" y="431.50">std::rt::lang_start_internal</text></g><g><title>std::rt::lang_start::{{closure}} (9,353,766 samples, 52.12%)</title><rect x="47.8775%" y="405" width="52.1225%" height="15" fill="rgb(249,83,47)" fg:x="8591973" fg:w="9353766"/><text x="48.1275%" y="415.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (9,353,766 samples, 52.12%)</title><rect x="47.8775%" y="389" width="52.1225%" height="15" fill="rgb(215,43,3)" fg:x="8591973" fg:w="9353766"/><text x="48.1275%" y="399.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>gossh::main (9,353,766 samples, 52.12%)</title><rect x="47.8775%" y="373" width="52.1225%" height="15" fill="rgb(238,154,13)" fg:x="8591973" fg:w="9353766"/><text x="48.1275%" y="383.50">gossh::main</text></g><g><title>ratatui::terminal::terminal::Terminal&lt;B&gt;::with_options (2,035,561 samples, 11.34%)</title><rect x="88.6571%" y="357" width="11.3429%" height="15" fill="rgb(219,56,2)" fg:x="15910178" fg:w="2035561"/><text x="88.9071%" y="367.50">ratatui::terminal..</text></g><g><title>ratatui::buffer::buffer::Buffer::empty (2,035,561 samples, 11.34%)</title><rect x="88.6571%" y="341" width="11.3429%" height="15" fill="rgb(233,0,4)" fg:x="15910178" fg:w="2035561"/><text x="88.9071%" y="351.50">ratatui::buffer::..</text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (2,035,561 samples, 11.34%)</title><rect x="88.6571%" y="325" width="11.3429%" height="15" fill="rgb(235,30,7)" fg:x="15910178" fg:w="2035561"/><text x="88.9071%" y="335.50">&lt;T as alloc::vec:..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (2,035,561 samples, 11.34%)</title><rect x="88.6571%" y="309" width="11.3429%" height="15" fill="rgb(250,79,13)" fg:x="15910178" fg:w="2035561"/><text x="88.9071%" y="319.50">alloc::vec::Vec&lt;T..</text></g><g><title>asm_exc_page_fault (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="293" width="5.5768%" height="15" fill="rgb(211,146,34)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="303.50">asm_exc..</text></g><g><title>exc_page_fault (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="277" width="5.5768%" height="15" fill="rgb(228,22,38)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="287.50">exc_pag..</text></g><g><title>do_user_addr_fault (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="261" width="5.5768%" height="15" fill="rgb(235,168,5)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="271.50">do_user..</text></g><g><title>handle_mm_fault (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="245" width="5.5768%" height="15" fill="rgb(221,155,16)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="255.50">handle_..</text></g><g><title>__handle_mm_fault (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="229" width="5.5768%" height="15" fill="rgb(215,215,53)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="239.50">__handl..</text></g><g><title>handle_pte_fault (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="213" width="5.5768%" height="15" fill="rgb(223,4,10)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="223.50">handle_..</text></g><g><title>do_anonymous_page (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="197" width="5.5768%" height="15" fill="rgb(234,103,6)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="207.50">do_anon..</text></g><g><title>__folio_throttle_swaprate (1,000,791 samples, 5.58%)</title><rect x="94.4232%" y="181" width="5.5768%" height="15" fill="rgb(227,97,0)" fg:x="16944948" fg:w="1000791"/><text x="94.6732%" y="191.50">__folio..</text></g><g><title>all (17,945,741 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(234,150,53)" fg:x="0" fg:w="17945741"/><text x="0.2500%" y="495.50"></text></g></svg></svg>